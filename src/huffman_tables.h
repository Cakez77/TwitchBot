#include "defines.h"

uint32_t constexpr MAX_HUFFMAN_TABLE_ENTRIES = 256;

struct HuffmanTableEntry
{
    uint16_t x;
    uint16_t y;
    uint16_t hlen;
    uint16_t code;
};

struct HuffmanTableEntryCount1Region
{
    uint16_t v;
    uint16_t w;
    uint16_t x;
    uint16_t y;
    uint16_t hlen;
    uint16_t code;
};

struct HuffmanTable
{
    uint32_t entryCount;
    HuffmanTableEntry huffmanEntries[MAX_HUFFMAN_TABLE_ENTRIES];
};

struct HuffmanTableCount1Region
{
    uint32_t entryCount;
    HuffmanTableEntryCount1Region huffmanEntries[16];
};

// Huffman code table 24 (linbits=4), 25 (linbits=5), 26 (linbits=6), 27 (linbits=7), 28 (linbits=8), 29 (linbits=9), 30 (linbits=11), 31 (linbits=13)
// 16*16
uint32_t linbitsTables[32] = {
    0,  // 0
    0,  // 1
    0,  // 2
    0,  // 3
    0,  // 4
    0,  // 5
    0,  // 6
    0,  // 7
    0,  // 8
    0,  // 9
    0,  // 10
    0,  // 11
    0,  // 12
    0,  // 13
    0,  // 14
    0,  // 15
    1,  // 16
    2,  // 17
    3,  // 18
    4,  // 19
    6,  // 20
    8,  // 21
    10, // 22
    13, // 23
    4,  // 24
    5,  // 25
    6,  // 26
    7,  // 27
    8,  // 28
    9,  // 29
    11, // 30
    13  // 31
};

HuffmanTable huffmanTables[32]{
    //  Table 0
    {},
    //  Table 1
    {},
    //  Table 2
    {},
    //  Table 3
    {9, // Entry Count
     {{0, 0, 2, 0b11},
      {0, 1, 2, 0b10},
      {0, 2, 6, 0b000001},
      {1, 0, 3, 0b001},
      {1, 1, 2, 0b01},
      {1, 2, 5, 0b00001},
      {2, 0, 5, 0b00011},
      {2, 1, 5, 0b00010},
      {2, 2, 6, 0b000000}}},
    //  Table 4
    {},
    //  Table 5
    {},
    //  Table 6
    {},
    //  Table 7
    {},
    //  Table 8
    {},
    //  Table 9
    {},
    //  Table 10
    {},
    //  Table 11
    {},
    //  Table 12
    {64, // Entry Count
     {{0, 0, 4, 0b1001},
      {0, 1, 3, 0b110},
      {0, 2, 5, 0b10000},
      {0, 3, 7, 0b0100001},
      {0, 4, 8, 0b00101001},
      {0, 5, 9, 0b000100111},
      {0, 6, 9, 0b000100110},
      {0, 7, 9, 0b000011010},
      {1, 0, 3, 0b111},
      {1, 1, 3, 0b101},
      {1, 2, 4, 0b0110},
      {1, 3, 5, 0b01001},
      {1, 4, 7, 0b0010111},
      {1, 5, 7, 0b0010000},
      {1, 6, 8, 0b00011010},
      {1, 7, 8, 0b00001011},
      {2, 0, 5, 0b10001},
      {2, 1, 4, 0b0111},
      {2, 2, 5, 0b01011},
      {2, 3, 6, 0b001110},
      {2, 4, 7, 0b0010101},
      {2, 5, 8, 0b00011110},
      {2, 6, 7, 0b0001010},
      {2, 7, 8, 0b00000111},
      {3, 0, 6, 0b010001},
      {3, 1, 5, 0b01010},
      {3, 2, 6, 0b001111},
      {3, 3, 6, 0b001100},
      {3, 4, 7, 0b0010010},
      {3, 5, 8, 0b00011100},
      {3, 6, 8, 0b00001110},
      {3, 7, 8, 0b00000101},
      {4, 0, 7, 0b0100000},
      {4, 1, 6, 0b001101},
      {4, 2, 7, 0b0010110},
      {4, 3, 7, 0b0010011},
      {4, 4, 8, 0b00010010},
      {4, 5, 8, 0b00010000},
      {4, 6, 8, 0b00001001},
      {4, 7, 9, 0b000000101},
      {5, 0, 8, 0b00101000},
      {5, 1, 7, 0b0010001},
      {5, 2, 8, 0b00011111},
      {5, 3, 8, 0b00011101},
      {5, 4, 8, 0b00010001},
      {5, 5, 9, 0b000001101},
      {5, 6, 8, 0b00000100},
      {5, 7, 9, 0b000000010},
      {6, 0, 8, 0b00011011},
      {6, 1, 7, 0b0001100},
      {6, 2, 7, 0b0001011},
      {6, 3, 8, 0b00001111},
      {6, 4, 8, 0b00001010},
      {6, 5, 9, 0b000000111},
      {6, 6, 9, 0b000000100},
      {6, 7, 10, 0b0000000001},
      {7, 0, 9, 0b000011011},
      {7, 1, 8, 0b00001100},
      {7, 2, 8, 0b00001000},
      {7, 3, 9, 0b000001100},
      {7, 4, 9, 0b000000110},
      {7, 5, 9, 0b000000011},
      {7, 6, 9, 0b000000001},
      {7, 7, 10, 0b0000000000}}},
    //  Table 13
    {},
    //  Table 14
    {},
    //  Table 15
    {},
    // Tables 16, 17, 18, 19, 20, 21, 22, 23
    {},
    // Tables 24, 25, 26, 27, 28, 29, 30, 31
    {256, // Entry Count
     {{0, 0, 4, 0b1111},
      {0, 1, 4, 0b1101},
      {0, 2, 6, 0b101110},
      {0, 3, 7, 0b1010000},
      {0, 4, 8, 0b10010010},
      {0, 5, 9, 0b100000110},
      {0, 6, 9, 0b011111000},
      {0, 7, 10, 0b0110110010},
      {0, 8, 10, 0b0110101010},
      {0, 9, 11, 0b01010011101},
      {0, 10, 11, 0b01010001101},
      {0, 11, 11, 0b01010001001},
      {0, 12, 11, 0b01001101101},
      {0, 13, 11, 0b01000000101},
      {0, 14, 12, 0b010000001000},
      {0, 15, 9, 0b001011000},
      {1, 0, 4, 0b1110},
      {1, 1, 4, 0b1100},
      {1, 2, 5, 0b10101},
      {1, 3, 6, 0b100110},
      {1, 4, 7, 0b1000111},
      {1, 5, 8, 0b10000010},
      {1, 6, 8, 0b01111010},
      {1, 7, 9, 0b011011000},
      {1, 8, 9, 0b011010001},
      {1, 9, 9, 0b011000110},
      {1, 10, 10, 0b0101000111},
      {1, 11, 10, 0b0101011001},
      {1, 12, 10, 0b0100111111},
      {1, 13, 10, 0b0100101001},
      {1, 14, 10, 0b0100010111},
      {1, 15, 8, 0b00101010},
      {2, 0, 6, 0b101111},
      {2, 1, 5, 0b10110},
      {2, 2, 6, 0b101001},
      {2, 3, 7, 0b1001010},
      {2, 4, 7, 0b1000100},
      {2, 5, 8, 0b10000000},
      {2, 6, 8, 0b01111000},
      {2, 7, 9, 0b011011101},
      {2, 8, 9, 0b011001111},
      {2, 9, 9, 0b011000010},
      {2, 10, 9, 0b010110110},
      {2, 11, 10, 0b0101010100},
      {2, 12, 10, 0b0100111011},
      {2, 13, 10, 0b0100100111},
      {2, 14, 11, 0b01000011101},
      {2, 15, 7, 0b0010010},
      {3, 0, 7, 0b1010001},
      {3, 1, 6, 0b100111},
      {3, 2, 7, 0b1001011},
      {3, 3, 7, 0b1000110},
      {3, 4, 8, 0b10000110},
      {3, 5, 8, 0b01111101},
      {3, 6, 8, 0b01110100},
      {3, 7, 9, 0b011011100},
      {3, 8, 9, 0b011001100},
      {3, 9, 9, 0b010111110},
      {3, 10, 9, 0b010110010},
      {3, 11, 10, 0b0101000101},
      {3, 12, 10, 0b0100110111},
      {3, 13, 10, 0b0100100101},
      {3, 14, 10, 0b0100001111},
      {3, 15, 7, 0b0010000},
      {4, 0, 8, 0b10010011},
      {4, 1, 7, 0b1001000},
      {4, 2, 7, 0b1000101},
      {4, 3, 8, 0b10000111},
      {4, 4, 8, 0b01111111},
      {4, 5, 8, 0b01110110},
      {4, 6, 8, 0b01110000},
      {4, 7, 9, 0b011010010},
      {4, 8, 9, 0b011001000},
      {4, 9, 9, 0b010111100},
      {4, 10, 10, 0b0101100000},
      {4, 11, 10, 0b0101000011},
      {4, 12, 10, 0b0100110010},
      {4, 13, 10, 0b0100011101},
      {4, 14, 11, 0b01000011100},
      {4, 15, 7, 0b0001110},
      {5, 0, 9, 0b100000111},
      {5, 1, 7, 0b1000010},
      {5, 2, 8, 0b10000001},
      {5, 3, 8, 0b01111110},
      {5, 4, 8, 0b01110111},
      {5, 5, 8, 0b01110010},
      {5, 6, 9, 0b011010110},
      {5, 7, 9, 0b011001010},
      {5, 8, 9, 0b011000000},
      {5, 9, 9, 0b010110100},
      {5, 10, 10, 0b0101010101},
      {5, 11, 10, 0b0100111101},
      {5, 12, 10, 0b0100101101},
      {5, 13, 10, 0b0100011001},
      {5, 14, 10, 0b0100000110},
      {5, 15, 7, 0b0001100},
      {6, 0, 9, 0b011111001},
      {6, 1, 8, 0b01111011},
      {6, 2, 8, 0b01111001},
      {6, 3, 8, 0b01110101},
      {6, 4, 8, 0b01110001},
      {6, 5, 9, 0b011010111},
      {6, 6, 9, 0b011001110},
      {6, 7, 9, 0b011000011},
      {6, 8, 9, 0b010111001},
      {6, 9, 10, 0b0101011011},
      {6, 10, 10, 0b0101001010},
      {6, 11, 10, 0b0100110100},
      {6, 12, 10, 0b0100100011},
      {6, 13, 10, 0b0100010000},
      {6, 14, 11, 0b01000001000},
      {6, 15, 7, 0b0001010},
      {7, 0, 10, 0b0110110011},
      {7, 1, 8, 0b01110011},
      {7, 2, 8, 0b01101111},
      {7, 3, 8, 0b01101101},
      {7, 4, 9, 0b011010011},
      {7, 5, 9, 0b011001011},
      {7, 6, 9, 0b011000100},
      {7, 7, 9, 0b010111011},
      {7, 8, 10, 0b0101100001},
      {7, 9, 10, 0b0101001100},
      {7, 10, 10, 0b0100111001},
      {7, 11, 10, 0b0100101010},
      {7, 12, 10, 0b0100011011},
      {7, 13, 11, 0b01000010011},
      {7, 14, 11, 0b00101111101},
      {7, 15, 8, 0b00010001},
      {8, 0, 10, 0b0110101011},
      {8, 1, 9, 0b011010100},
      {8, 2, 9, 0b011010000},
      {8, 3, 9, 0b011001101},
      {8, 4, 9, 0b011001001},
      {8, 5, 9, 0b011000001},
      {8, 6, 9, 0b010111010},
      {8, 7, 9, 0b010110001},
      {8, 8, 9, 0b010101001},
      {8, 9, 10, 0b0101000000},
      {8, 10, 10, 0b0100101111},
      {8, 11, 10, 0b0100011110},
      {8, 12, 10, 0b0100001100},
      {8, 13, 11, 0b01000000010},
      {8, 14, 11, 0b00101111001},
      {8, 15, 8, 0b00010000},
      {9, 0, 10, 0b0101001111},
      {9, 1, 9, 0b011000111},
      {9, 2, 9, 0b011000101},
      {9, 3, 9, 0b010111111},
      {9, 4, 9, 0b010111101},
      {9, 5, 9, 0b010110101},
      {9, 6, 9, 0b010101110},
      {9, 7, 10, 0b0101001101},
      {9, 8, 10, 0b0101000001},
      {9, 9, 10, 0b0100110001},
      {9, 10, 10, 0b0100100001},
      {9, 11, 10, 0b0100010011},
      {9, 12, 11, 0b01000001001},
      {9, 13, 11, 0b00101111011},
      {9, 14, 11, 0b00101110011},
      {9, 15, 8, 0b00001011},
      {10, 0, 11, 0b01010011100},
      {10, 1, 9, 0b010111000},
      {10, 2, 9, 0b010110111},
      {10, 3, 9, 0b010110011},
      {10, 4, 9, 0b010101111},
      {10, 5, 10, 0b0101011000},
      {10, 6, 10, 0b0101001011},
      {10, 7, 10, 0b0100111010},
      {10, 8, 10, 0b0100110000},
      {10, 9, 10, 0b0100100010},
      {10, 10, 10, 0b0100010101},
      {10, 11, 11, 0b01000010010},
      {10, 12, 11, 0b00101111111},
      {10, 13, 11, 0b00101110101},
      {10, 14, 11, 0b00101101110},
      {10, 15, 8, 0b00001010},
      {11, 0, 11, 0b01010001100},
      {11, 1, 10, 0b0101011010},
      {11, 2, 9, 0b010101011},
      {11, 3, 9, 0b010101000},
      {11, 4, 9, 0b010100100},
      {11, 5, 10, 0b0100111110},
      {11, 6, 10, 0b0100110101},
      {11, 7, 10, 0b0100101011},
      {11, 8, 10, 0b0100011111},
      {11, 9, 10, 0b0100010100},
      {11, 10, 10, 0b0100000111},
      {11, 11, 11, 0b01000000001},
      {11, 12, 11, 0b00101110111},
      {11, 13, 11, 0b00101110000},
      {11, 14, 11, 0b00101101010},
      {11, 15, 8, 0b00000110},
      {12, 0, 11, 0b01010001000},
      {12, 1, 10, 0b0101000010},
      {12, 2, 10, 0b0100111100},
      {12, 3, 10, 0b0100111000},
      {12, 4, 10, 0b0100110011},
      {12, 5, 10, 0b0100101110},
      {12, 6, 10, 0b0100100100},
      {12, 7, 10, 0b0100011100},
      {12, 8, 10, 0b0100001101},
      {12, 9, 10, 0b0100000101},
      {12, 10, 11, 0b01000000000},
      {12, 11, 11, 0b00101111000},
      {12, 12, 11, 0b00101110010},
      {12, 13, 11, 0b00101101100},
      {12, 14, 11, 0b00101100111},
      {12, 15, 8, 0b00000100},
      {13, 0, 11, 0b01001101100},
      {13, 1, 10, 0b0100101100},
      {13, 2, 10, 0b0100101000},
      {13, 3, 10, 0b0100100110},
      {13, 4, 10, 0b0100100000},
      {13, 5, 10, 0b0100011010},
      {13, 6, 10, 0b0100010001},
      {13, 7, 10, 0b0100001010},
      {13, 8, 11, 0b01000000011},
      {13, 9, 11, 0b00101111100},
      {13, 10, 11, 0b00101110110},
      {13, 11, 11, 0b00101110001},
      {13, 12, 11, 0b00101101101},
      {13, 13, 11, 0b00101101001},
      {13, 14, 11, 0b00101100101},
      {13, 15, 8, 0b00000010},
      {14, 0, 12, 0b010000001001},
      {14, 1, 10, 0b0100011000},
      {14, 2, 10, 0b0100010110},
      {14, 3, 10, 0b0100010010},
      {14, 4, 10, 0b0100001011},
      {14, 5, 10, 0b0100001000},
      {14, 6, 10, 0b0100000011},
      {14, 7, 11, 0b00101111110},
      {14, 8, 11, 0b00101111010},
      {14, 9, 11, 0b00101110100},
      {14, 10, 11, 0b00101101111},
      {14, 11, 11, 0b00101101011},
      {14, 12, 11, 0b00101101000},
      {14, 13, 11, 0b00101100110},
      {14, 14, 11, 0b00101100100},
      {14, 15, 8, 0b00000000},
      {15, 0, 8, 0b00101011},
      {15, 1, 7, 0b0010100},
      {15, 2, 7, 0b0010011},
      {15, 3, 7, 0b0010001},
      {15, 4, 7, 0b0001111},
      {15, 5, 7, 0b0001101},
      {15, 6, 7, 0b0001011},
      {15, 7, 7, 0b0001001},
      {15, 8, 7, 0b0000111},
      {15, 9, 7, 0b0000110},
      {15, 10, 7, 0b0000100},
      {15, 11, 8, 0b00000111},
      {15, 12, 8, 0b00000101},
      {15, 13, 8, 0b00000011},
      {15, 14, 8, 0b00000001},
      {15, 15, 4, 0b0011}}}};

HuffmanTable get_huffman_table(uint32_t tableIdx)
{
    HuffmanTable ht = {};
    if (tableIdx <= 15)
    {
        ht = huffmanTables[tableIdx];
    }
    else if (tableIdx > 15 && tableIdx < 24)
    {
        ht = huffmanTables[16];
    }
    else if (tableIdx > 23 && tableIdx < 32)
    {
        ht = huffmanTables[17];
    }
    else
    {
        CAKEZ_ASSERT(0, "Wrong Table Index: %d", tableIdx);
    }

    return ht;
}

enum Count1RegionTable
{
    TABLE_A,
    TABLE_B
};

HuffmanTableCount1Region count1RegionTables[2] = {
    // Table A
    {16,
     {{0, 0, 0, 0, 1, 0b1},
      {0, 0, 0, 1, 4, 0b0101},
      {0, 0, 1, 0, 4, 0b0100},
      {0, 0, 1, 1, 5, 0b00101},
      {0, 1, 0, 0, 4, 0b0110},
      {0, 1, 0, 1, 6, 0b000101},
      {0, 1, 1, 0, 5, 0b00100},
      {0, 1, 1, 1, 6, 0b000100},
      {1, 0, 0, 0, 4, 0b0111},
      {1, 0, 0, 1, 5, 0b00011},
      {1, 0, 1, 0, 5, 0b00110},
      {1, 0, 1, 1, 6, 0b000000},
      {1, 1, 0, 0, 5, 0b00111},
      {1, 1, 0, 1, 6, 0b000010},
      {1, 1, 1, 0, 6, 0b000011},
      {1, 1, 1, 1, 6, 0b000001}}},

    // Table B
    {16,
     {{0, 0, 0, 0, 4, 0b1111},
      {0, 0, 0, 1, 4, 0b1110},
      {0, 0, 1, 0, 4, 0b1101},
      {0, 0, 1, 1, 4, 0b1100},
      {0, 1, 0, 0, 4, 0b1011},
      {0, 1, 0, 1, 4, 0b1010},
      {0, 1, 1, 0, 4, 0b1001},
      {0, 1, 1, 1, 4, 0b1000},
      {1, 0, 0, 0, 4, 0b0111},
      {1, 0, 0, 1, 4, 0b0110},
      {1, 0, 1, 0, 4, 0b0101},
      {1, 0, 1, 1, 4, 0b0100},
      {1, 1, 0, 0, 4, 0b0011},
      {1, 1, 0, 1, 4, 0b0010},
      {1, 1, 1, 0, 4, 0b0001},
      {1, 1, 1, 1, 4, 0b0000}}}};